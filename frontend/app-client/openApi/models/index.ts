/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type DateOnly, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServerLoanEndPointsLoanGetLoansGetLoansResponse}
 */
// @ts-ignore
export function createServerLoanEndPointsLoanGetLoansGetLoansResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServerLoanEndPointsLoanGetLoansGetLoansResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServerLoanEndPointsLoanGetLoansLoan}
 */
// @ts-ignore
export function createServerLoanEndPointsLoanGetLoansLoanFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServerLoanEndPointsLoanGetLoansLoan;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse}
 */
// @ts-ignore
export function createServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServerWeatherForecast}
 */
// @ts-ignore
export function createServerWeatherForecastFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServerWeatherForecast;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServerLoanEndPointsLoanGetLoansGetLoansResponse(serverLoanEndPointsLoanGetLoansGetLoansResponse: Partial<ServerLoanEndPointsLoanGetLoansGetLoansResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "loans": n => { serverLoanEndPointsLoanGetLoansGetLoansResponse.loans = n.getCollectionOfObjectValues<ServerLoanEndPointsLoanGetLoansLoan>(createServerLoanEndPointsLoanGetLoansLoanFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServerLoanEndPointsLoanGetLoansLoan(serverLoanEndPointsLoanGetLoansLoan: Partial<ServerLoanEndPointsLoanGetLoansLoan> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "bankAccountNumber": n => { serverLoanEndPointsLoanGetLoansLoan.bankAccountNumber = n.getStringValue(); },
        "bankAccountType": n => { serverLoanEndPointsLoanGetLoansLoan.bankAccountType = n.getStringValue(); },
        "bankName": n => { serverLoanEndPointsLoanGetLoansLoan.bankName = n.getStringValue(); },
        "dateOfBirth": n => { serverLoanEndPointsLoanGetLoansLoan.dateOfBirth = n.getDateValue(); },
        "email": n => { serverLoanEndPointsLoanGetLoansLoan.email = n.getStringValue(); },
        "fullName": n => { serverLoanEndPointsLoanGetLoansLoan.fullName = n.getStringValue(); },
        "id": n => { serverLoanEndPointsLoanGetLoansLoan.id = n.getStringValue(); },
        "loanAmount": n => { serverLoanEndPointsLoanGetLoansLoan.loanAmount = n.getNumberValue(); },
        "loanPurpose": n => { serverLoanEndPointsLoanGetLoansLoan.loanPurpose = n.getNumberValue(); },
        "loanStatus": n => { serverLoanEndPointsLoanGetLoansLoan.loanStatus = n.getNumberValue(); },
        "loanTerm": n => { serverLoanEndPointsLoanGetLoansLoan.loanTerm = n.getNumberValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse(serverLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse: Partial<ServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "loanId": n => { serverLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse.loanId = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServerWeatherForecast(serverWeatherForecast: Partial<ServerWeatherForecast> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "date": n => { serverWeatherForecast.date = n.getDateOnlyValue(); },
        "summary": n => { serverWeatherForecast.summary = n.getStringValue(); },
        "temperatureC": n => { serverWeatherForecast.temperatureC = n.getNumberValue(); },
        "temperatureF": n => { serverWeatherForecast.temperatureF = n.getNumberValue(); },
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServerLoanEndPointsLoanGetLoansGetLoansResponse(writer: SerializationWriter, serverLoanEndPointsLoanGetLoansGetLoansResponse: Partial<ServerLoanEndPointsLoanGetLoansGetLoansResponse> | undefined | null = {}) : void {
    if (serverLoanEndPointsLoanGetLoansGetLoansResponse) {
        writer.writeCollectionOfObjectValues<ServerLoanEndPointsLoanGetLoansLoan>("loans", serverLoanEndPointsLoanGetLoansGetLoansResponse.loans, serializeServerLoanEndPointsLoanGetLoansLoan);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServerLoanEndPointsLoanGetLoansLoan(writer: SerializationWriter, serverLoanEndPointsLoanGetLoansLoan: Partial<ServerLoanEndPointsLoanGetLoansLoan> | undefined | null = {}) : void {
    if (serverLoanEndPointsLoanGetLoansLoan) {
        writer.writeStringValue("bankAccountNumber", serverLoanEndPointsLoanGetLoansLoan.bankAccountNumber);
        writer.writeStringValue("bankAccountType", serverLoanEndPointsLoanGetLoansLoan.bankAccountType);
        writer.writeStringValue("bankName", serverLoanEndPointsLoanGetLoansLoan.bankName);
        writer.writeDateValue("dateOfBirth", serverLoanEndPointsLoanGetLoansLoan.dateOfBirth);
        writer.writeStringValue("email", serverLoanEndPointsLoanGetLoansLoan.email);
        writer.writeStringValue("fullName", serverLoanEndPointsLoanGetLoansLoan.fullName);
        writer.writeStringValue("id", serverLoanEndPointsLoanGetLoansLoan.id);
        writer.writeNumberValue("loanAmount", serverLoanEndPointsLoanGetLoansLoan.loanAmount);
        writer.writeNumberValue("loanPurpose", serverLoanEndPointsLoanGetLoansLoan.loanPurpose);
        writer.writeNumberValue("loanStatus", serverLoanEndPointsLoanGetLoansLoan.loanStatus);
        writer.writeNumberValue("loanTerm", serverLoanEndPointsLoanGetLoansLoan.loanTerm);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse(writer: SerializationWriter, serverLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse: Partial<ServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse> | undefined | null = {}) : void {
    if (serverLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse) {
        writer.writeStringValue("loanId", serverLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse.loanId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServerWeatherForecast(writer: SerializationWriter, serverWeatherForecast: Partial<ServerWeatherForecast> | undefined | null = {}) : void {
    if (serverWeatherForecast) {
        writer.writeDateOnlyValue("date", serverWeatherForecast.date);
        writer.writeStringValue("summary", serverWeatherForecast.summary);
        writer.writeNumberValue("temperatureC", serverWeatherForecast.temperatureC);
        writer.writeNumberValue("temperatureF", serverWeatherForecast.temperatureF);
    }
}
export interface ServerLoanEndPointsLoanGetLoansGetLoansResponse extends Parsable {
    /**
     * The loans property
     */
    loans?: ServerLoanEndPointsLoanGetLoansLoan[] | null;
}
export interface ServerLoanEndPointsLoanGetLoansLoan extends Parsable {
    /**
     * The bankAccountNumber property
     */
    bankAccountNumber?: string | null;
    /**
     * The bankAccountType property
     */
    bankAccountType?: string | null;
    /**
     * The bankName property
     */
    bankName?: string | null;
    /**
     * The dateOfBirth property
     */
    dateOfBirth?: Date | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The fullName property
     */
    fullName?: string | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The loanAmount property
     */
    loanAmount?: number | null;
    /**
     * The loanPurpose property
     */
    loanPurpose?: number | null;
    /**
     * The loanStatus property
     */
    loanStatus?: number | null;
    /**
     * The loanTerm property
     */
    loanTerm?: number | null;
}
export interface ServerLoanEndPointsLoanUpdateLoanStatusUpdateLoanStatuResponse extends Parsable {
    /**
     * The loanId property
     */
    loanId?: string | null;
}
export interface ServerWeatherForecast extends Parsable {
    /**
     * The date property
     */
    date?: DateOnly | null;
    /**
     * The summary property
     */
    summary?: string | null;
    /**
     * The temperatureC property
     */
    temperatureC?: number | null;
    /**
     * The temperatureF property
     */
    temperatureF?: number | null;
}
/* tslint:enable */
/* eslint-enable */
